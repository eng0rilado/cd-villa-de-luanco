---
import Header from '../components/layout/Header.astro';
import Footer from '../components/layout/Footer.astro';
import Breadcrumbs from '../components/layout/Breadcrumbs.astro';
import '../styles/global.css';

export interface Props {
  title: string;
  description?: string;
  breadcrumbs?: Array<{
    label: string;
    href?: string;
  }>;
}

const { title, description = 'Club Deportivo Villa - Más de 50 años promoviendo el deporte y la vida sana en nuestra comunidad', breadcrumbs } = Astro.props;
---

<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- SEO Meta Tags -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:image" content="/images/og-image.jpg" />
    
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content="/images/og-image.jpg" />
    
    <title>{title}</title>
    
    <!-- Preload critical resources -->
    <link rel="preload" href="/fonts/inter-var.woff2" as="font" type="font/woff2" crossorigin />
    
    <!-- Structured Data -->
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "SportsClub",
        "name": "Club Deportivo Villa",
        "description": "Más de 50 años promoviendo el deporte y la vida sana en nuestra comunidad",
        "url": "https://clubvilladeportivo.com",
        "address": {
          "@type": "PostalAddress",
          "streetAddress": "Av. Deportiva 123",
          "addressLocality": "Madrid",
          "postalCode": "28001",
          "addressCountry": "ES"
        },
        "telephone": "+34 91 123 45 67",
        "email": "info@clubvilladeportivo.com",
        "foundingDate": "1973",
        "sport": ["Balonmano", "Baloncesto", "Pádel", "Ciclo Indoor", "Full Body"],
        "amenityFeature": [
          {
            "@type": "LocationFeatureSpecification",
            "name": "Pista de Balonmano",
            "value": true
          },
          {
            "@type": "LocationFeatureSpecification", 
            "name": "Cancha de Baloncesto",
            "value": true
          },
          {
            "@type": "LocationFeatureSpecification",
            "name": "Pistas de Pádel",
            "value": true
          },
          {
            "@type": "LocationFeatureSpecification",
            "name": "Gimnasio",
            "value": true
          }
        ]
      }
    </script>
  </head>
  <body class="min-h-screen flex flex-col bg-apple-white text-apple-primary overflow-x-hidden">
    <!-- Header -->
    <Header />
    
    <!-- Breadcrumbs -->
    {breadcrumbs && breadcrumbs.length > 0 && (
      <Breadcrumbs items={breadcrumbs} />
    )}
    
    <!-- Main Content -->
    <main class="flex-1">
      <slot />
    </main>
    
    <!-- Footer -->
    <Footer />
    
    <!-- Global Scripts -->
    <script>
      // Smooth scrolling for anchor links
      document.addEventListener('DOMContentLoaded', () => {
        // Handle anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
          anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
              target.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
              });
            }
          });
        });
        
        // Mobile Menu Functionality
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-navigation');
        const mobileMenuClose = document.getElementById('mobile-menu-close');
        const mobileNavPanel = mobileMenu?.querySelector('.mobile-nav-panel');
        const mobileNavOverlay = mobileMenu?.querySelector('.mobile-nav-overlay');
        
        function openMobileMenu() {
          if (mobileMenu && mobileNavPanel && mobileNavOverlay) {
            mobileMenu.style.display = 'block';
            document.body.classList.add('mobile-menu-open');
            
            // Trigger animation after display is set
            requestAnimationFrame(() => {
              mobileMenu.classList.add('open');
              mobileNavPanel.classList.add('open');
            });
            
            // Update button state
            if (mobileMenuButton) {
              mobileMenuButton.classList.add('open');
              mobileMenuButton.setAttribute('aria-expanded', 'true');
            }
          }
        }
        
        function closeMobileMenu() {
          if (mobileMenu && mobileNavPanel && mobileNavOverlay) {
            mobileMenu.classList.remove('open');
            mobileNavPanel.classList.remove('open');
            document.body.classList.remove('mobile-menu-open');
            
            // Update button state
            if (mobileMenuButton) {
              mobileMenuButton.classList.remove('open');
              mobileMenuButton.setAttribute('aria-expanded', 'false');
            }
            
            // Hide menu after animation completes
            setTimeout(() => {
              mobileMenu.style.display = 'none';
            }, 300);
          }
        }
        
        // Mobile menu button click
        if (mobileMenuButton) {
          mobileMenuButton.addEventListener('click', (e) => {
            e.stopPropagation();
            if (mobileMenu?.classList.contains('open')) {
              closeMobileMenu();
            } else {
              openMobileMenu();
            }
          });
        }
        
        // Mobile menu close button click
        if (mobileMenuClose) {
          mobileMenuClose.addEventListener('click', closeMobileMenu);
        }
        
        // Close mobile menu when clicking overlay
        if (mobileNavOverlay) {
          mobileNavOverlay.addEventListener('click', closeMobileMenu);
        }
        
        // Mobile submenu toggles
        const mobileNavToggles = document.querySelectorAll('.mobile-nav-toggle');
        mobileNavToggles.forEach(toggle => {
          toggle.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            
            const submenu = toggle.nextElementSibling;
            const svg = toggle.querySelector('svg');
            
            if (submenu && svg) {
              const isOpen = submenu.classList.contains('open');
              
              if (isOpen) {
                // Close this submenu
                submenu.classList.remove('open');
                toggle.classList.remove('open');
                svg.style.transform = 'rotate(0deg)';
              } else {
                // Close other open submenus first
                mobileNavToggles.forEach(otherToggle => {
                  if (otherToggle !== toggle) {
                    const otherSubmenu = otherToggle.nextElementSibling;
                    const otherSvg = otherToggle.querySelector('svg');
                    if (otherSubmenu && otherSvg) {
                      otherSubmenu.classList.remove('open');
                      otherToggle.classList.remove('open');
                      otherSvg.style.transform = 'rotate(0deg)';
                    }
                  }
                });
                
                // Open this submenu
                submenu.classList.add('open');
                toggle.classList.add('open');
                svg.style.transform = 'rotate(180deg)';
              }
            }
          });
        });
        
        // Close mobile menu when clicking outside
        document.addEventListener('click', (e) => {
          if (mobileMenu && mobileMenuButton && 
              !mobileMenu.contains(e.target as Node) && 
              !mobileMenuButton.contains(e.target as Node) &&
              mobileMenu.classList.contains('open')) {
            closeMobileMenu();
          }
        });
        
        // Close mobile menu when viewport changes (resize)
        let resizeTimeout;
        window.addEventListener('resize', () => {
          // Clear previous timeout
          clearTimeout(resizeTimeout);
          
          // Set new timeout to avoid too many calls
          resizeTimeout = setTimeout(() => {
            if (mobileMenu && mobileMenu.classList.contains('open')) {
              closeMobileMenu();
            }
          }, 150);
        });
        
        // Close mobile menu when orientation changes
        window.addEventListener('orientationchange', () => {
          if (mobileMenu && mobileMenu.classList.contains('open')) {
            closeMobileMenu();
          }
        });
        
        // Keyboard navigation for dropdowns and mobile menu
        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape') {
            // Close mobile menu if open
            if (mobileMenu && mobileMenu.classList.contains('open')) {
              closeMobileMenu();
            }
            
            // Close any open dropdowns or modals
            document.querySelectorAll('[data-dropdown]').forEach(dropdown => {
              dropdown.classList.remove('open');
            });
          }
        });
      });
      
      // Performance monitoring
      if ('performance' in window) {
        window.addEventListener('load', () => {
          setTimeout(() => {
            const perfData = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming;
            if (perfData && perfData.loadEventEnd && perfData.loadEventStart) {
              console.log('Page load time:', perfData.loadEventEnd - perfData.loadEventStart, 'ms');
            }
          }, 0);
        });
      }
    </script>
  </body>
</html>

<style>
  /* Ensure proper layout structure */
  html {
    scroll-behavior: smooth;
    overflow-x: hidden;
  }
  
  body {
    font-family: var(--font-family-apple);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    overflow-x: hidden;
    max-width: 100vw;
  }
  
  /* Focus management for accessibility */
  *:focus {
    outline: 2px solid var(--color-apple-link);
    outline-offset: 2px;
  }
  
  /* Ensure main content has proper spacing and no overflow */
  main {
    min-height: calc(100vh - 200px);
    max-width: 100vw;
    overflow-x: hidden;
  }
  
  /* Allow full-screen hero sections */
  main > section:first-child {
    margin-top: -4rem;
    max-width: 100vw;
    overflow-x: hidden;
  }
  
  /* Ensure all sections respect viewport width */
  section {
    max-width: 100vw;
    overflow-x: hidden;
  }
  
  /* Mobile-specific overflow prevention */
  @media (max-width: 768px) {
    html, body {
      overflow-x: hidden !important;
      max-width: 100vw !important;
    }
    
    main {
      max-width: 100vw;
      overflow-x: hidden;
    }
    
    section {
      max-width: 100vw;
      overflow-x: hidden;
    }
  }
  
  /* Print styles */
  @media print {
    header,
    footer,
    .breadcrumbs {
      display: none !important;
    }
    
    main {
      margin: 0;
      padding: 0;
    }
  }
</style>
